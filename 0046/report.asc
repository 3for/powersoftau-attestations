-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Powers of Tau Attestation by Wobbzz aka @btcwobbzz (Twitter)

Location: Colorado, USA
Datetime: 29 Jan 2018, approx 1100 MST

I approached Sean via email to participate in this ceremony without announcing my intent over the mailing list.

I used an ASRock 990FX motherboard with a FX-8350 CPU. This machine is normally a gaming rig, but has been mining zcash with 2x 1070ti's lately. It is normally configured with 32GB DDR3 for gaming purpo
ses and I've been too lazy to remove any of that for mining. However, for the purposes of this ceremony, I dug out 2 old spare sticks of DDR3 memory from a box of old components. These 2x2GB sticks were
put in place of the 32GB bundle specifically for the ceremony.

I loaded a previously downloaded Gentoo live iso onto a virtual drive emulator, booted into this live OS, and used this temporary environment for the whole ceremony. I ran the following commands to set up my environment using the command line:

# Setup Rust compiler
curl https://sh.rustup.rs -sSf | sh # Setup Rust compiler
source $HOME/.cargo/env # Source the new Rust binaries
cargo -V # Obtained the version of cargo being used: cargo 0.24.0 (45043115c 2017-12-05)

# Setup permanent file storage
I recently bought a brand new 32GB flash drive from a local retailer for temporary storage for this competition. I opened the packaging today during this process.
I deleted the existing FAT partition on the drive using fdisk, created a new Linux partition, then formatted it with mkfs.ext3.
This partiion was mounted to a newly created /mnt/tau directory.

# Setup Powers of Tau ceremony files
cd /mnt/tau && git clone https://github.com/ebfull/powersoftau.git && cd powersoftau

git show:
commit d47a1d3d1f007063cbcc35f1ab902601a8b3bd91
Merge: 9e1553c 22846cd
Author: ebfull <ewillbefull@gmail.com>
Date:   Thu Nov 16 06:13:08 2017 -0700

curl https://s3-us-west-2.amazonaws.com/powersoftau/pwQRzsZ9uDzR8rzOxXkiHCB2vVIVegL3/index.html # to find the download link for the challenge file.
wget https://s3-us-west-2.amazonaws.com/powersoftau/pwQRzsZ9uDzR8rzOxXkiHCB2vVIVegL3/challenge
sha256sum challenge # 10799da998e46c2fc276599e62160103210bf79fa9e93061c05d9c3f8d3588ab  challenge

# Run the computation
cargo run --release --bin compute

I provided a few fistfulls of entropy (literally) by running my fist over the keyboard for a few lines, occasionally holding the shift key. 493 characters of entropy were provided (yes I counted).

The computation ran for about 45 minutes. I ate my lunch while watching the bits do their thing. I never left the machine unattended. My cat also assisted in guarding the machine.

https://imgur.com/a/04ZRs

The computation spit out the following hash:

The BLAKE2b hash of `./response` is:
        e08045d5 233a623c 658b3db1 8ec21f40
        7077e856 cfc99239 aefd72d3 2638df49
        c83d78f9 bbf70ae4 c8ed9bd1 bd0206fd
        89d783bf 8f03843e 51cd7514 91502471

sha256sum response # 0a3e32b1fbfd0c568c4a9400c74a4fd9c451bcba4b2ca8c049c579f2e5e66496  response

I then shut the system down and removed the ceremony specific sticks of DDR3 memory. They'll go back in the random box of stuff until needed for a future project.

Overall the process was quick and easy. I didn't do anything fancy or have any witnesses present. I'm happy that I was able to contribute my part in securing the project.
-----BEGIN PGP SIGNATURE-----
Version: Keybase OpenPGP v2.0.76
Comment: https://keybase.io/crypto

wsFcBAABCgAGBQJab4SeAAoJEDUt8XcRdgNOO7UP/A72gIiM/20iGuHO5eugpT9p
mE5N4BCfeTmwg53QO8/0+QlXw6fJwmVE8kIUCS9RWdvMhdYKv6AZSgeNv9qgSKe+
xL9I6K9gFluqsLQdPzFZmuojTu869ipDcQgQvA/jFLW8h6eJfioUhVdh09j3JAQ6
gPmL7kgWbY8/ERu9dtPigxI1hi+S5i9ZnETkOOGKukeaO0EBBqZPUyaHCfXCWQIC
V75rcxS1SdGuv1KN7Cjq1Kgm3KqHJl69dAK7Xa15DZSVF2idcHVW+jT6IhiXSOPY
o13l4Py23v/pIyl0us0u2v3Llpq/w1VEx/h42U3DOU8q9Fy5hqR4Ds2PSJ8pxVSx
iynKmQBnpahvucx7FJ0z4FpT0I3oD1EqwTdXl/Gu+Upst2iFa486CQZH98HnEekh
Pj3ZpGqNLUCfA/X9TkjnBsFms0SewfoDVb1DYiXd+w5kPGNEcG4puG6snXkD72VX
+wQ1WdSuoNmzVFaaoBnae1jXHmjcvayzyI+0XRXDE4+XOH74l0sETniAFAcS8A1A
TO3PGLJYvMANKjgvHnIIq7IPiQPhyQexd9l5NftrC7PSCn1eiWUuMgxE8ZIiJvMF
bOZ+AEVa89f/868Pmp9/G4RLE4aVhETptK7AGvXQPcKyap/benx/uAFzJlEa+0tK
vKih/4ENZPiyyej/i1Y0
=KPPB
-----END PGP SIGNATURE-----
